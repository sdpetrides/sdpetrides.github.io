---
layout: post
title:  "Perfect Secrecy in Reality"
date:   2017-10-31 22:40:00 -0400
categories: technology
---
## How much secrecy is enough secrecy?

Early in my cryptography class, we learned about the concept of perfect secrecy. It is the idea that given a ciphertext (an encrypted message), an adversary cannot retrieve any information about the original message. More technically, the adversary cannot reveal any characters or symbols in the message nor garner any information about what the message may contain. Frankly, it is a very strict definition but that is how we will define “perfection” in the context of secrecy.

For encryption schemes that meet the standards of perfect secrecy, the following equation holds true:

	Pr[Enc(m) = c] = Pr[Enc(m') = c]

	Enc()    encryption function
	m, m'    two distinct messages
	c        ciphertext

Stated plainly, with a perfectly secret encryption scheme, the probability that a message m would be encrypted to ciphertext c must be the same as the probability that a message m’ would be encrypted to ciphertext c. In other words, encrypting one message versus another does not change the probability of getting a certain ciphertext.

If this definition seems very strict, that is because it is strict. However, creating this type of secrecy is very simple.
	
	Generation: Generate a uniform random key with the same length of the message.
	Encryption: Output a ciphertext that is the XOR of the key and the message.
	Decryption: Output the message as the XOR of the key and the ciphertext. 

Using this encryption scheme, Alice and Bob (two theoretical communication endpoints) can be absolutely sure that after passing the ciphertext, no eavesdropper can possibly reveal any information about the original message. There are many encryption schemes that fit this definition and ensure perfect secrecy. Choosing one is not an issue. Using one, in reality, is an issue.

If Alice wanted to send a long message, of say, a few hundred megabytes, she must generate a uniform random key of the same length. This is not practical at all. This is an issue.

If Alice wanted to send a series of short messages, she must safely pass on the series of keys to Bob, one for each message. Furthermore, Bob must store these keys and use them for the right messages. This is not practical at all. This is a major issue.

This encryption scheme is called the One Time Pad (OTP). And while the OTP scheme is perfectly secret, it is not practical in reality and is not commonly used.

# So what is used?

More practical methods take a random seed and 'stretch' the seed to the message length to make it appear as completely random. What is interesting here is that this method is not perfectly secret. This practical OTP scheme does not meet the requirements of the equation outline earlier. This means that adversaries can reveal some information about messages sent. In reality, however, Alice and Bob are safe to communicate using the pseudo-OTP.

# How are they safe if adversaries can reveal information about the message?

The only way that adversaries can reveal information if they have algorithms that work in 'exponential time.' Without explaining the classification of algorithms, it is sufficient to point out that are no adversaries that work in exponential time. Currently, the best they can do is 'polynomial time' and that is not good enough to crack this practical OTP.

These natural limits of computation allow encryption schemes to guarantee practical secrecy for the world.
